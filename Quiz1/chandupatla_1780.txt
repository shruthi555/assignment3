
Name:sruthi chandupatla
Last 4 digits ID:1780

CSE 6331, Cloud Computing	

URL- https://quiz1sruthi.us-south.cf.appdomain.cloud/				


Quiz Q1, 6.00, Summer 2020   (c) DL, UTA, 2020


  C&P means cut and paste only those relevant lines from your program(s) into this quiz.


 1.  I understand that I am on my honor during this quiz, I will not collaborate, use 
     non-allowed sources, and I will not discuss or share this quiz with anyone for the next 
     12 hours.
     You MAY: use Google to search, use previous source code, 
     YOU MAY NOT use:
     Email, Facebook, Hangouts, IM, chats, Skype or ANY other human connection.

     This is a timed test. Late tests will have points deducted for being late.
     Very late tests will not be graded.

     When you are complete, with any part, please send the link, raise your hand, so we may visually inspect that part.

     The second part of the test, you should electronically submit, you will need to copy and paste 
     only those lines of code to implement that part of the test, usually a few (two to eight) lines of code. 
     Place it immediately after the question.

     Submit this Quiz (renamed) with code cut and pasted, ONLY text. DO NOT submit zips, binaries, libraries,
     or anything other than text.

     When any parts(questions) are complete complete, submit this test, you may make multiple submissions.

     If you have computer, or other, problems, please raise your hand immediately.

     If you understand and agree, please initial here:
     ____________Ch_____

 2. Get files from this same folder.
   
 3. Name your program/submission with your name and last digits of your ID.

 4a. Using the cloud services provider, all functionality possible should be implemented on that provider.
     (Of course, displaying web pages through a browser and the user interface is "local")

 4b. Upload all data files (*jpg and *csv, not this quiz) to cloud service. 
  
Show and submit code, when each part is complete, raise your hand and then show us:

 To recieve credit you MUST show (demo) AND submit the code (text only) on Canvas.

 5. Show a web page and interface (which resides on the cloud provider) with your name,
    and below that "b.jpg" and below that student ID.
    For all questions after this one, on the top of each page, please show your name, 
    then below that your ID.
    Please use a large font.
    The cloud service provider is IBM Cloud (BlueMix).


    <h1>
        SRUTHI CHANDUPATLA
    </h1>
    <img src="{{ image_folder }}/b.jpg" width="200px" alt="No image is present for b.jpg">
    <h1>1001771780</h1>

    @app.route('/')
    def index():
        results = db.all()
        return render_template('index.html', image_folder=PEOPLE_FOLDER, results = results)
        
 6. Please show a web interface that allows a user to enter two numerical, integer values. Then add those values
    and display the result on a web page.

    <body>
        <header style="text-align: center;">
            <h1>
            SRUTHI : 1001771780
            </h1>
            <h3>
                <a href="/">Click to go to Home</a>
            </h3>
        </header>
        <h1>
            sum of {{first}} and {{second}} is {{total}}
        </h1>
    </body>

    @app.route('/addnums', methods=['POST'])
    def addnums():
        first = request.form['first']
        second = request.form['second']
        total = int(first)+int(second)
        return render_template('add.html', first=first, second=second, total=total)

 7. (Web Page) allow a user to give a state and you show all the names, pictures, and captions of ALL people in that state.

    <header style="text-align: center;">
        <h1>
        SRUTHI : 1001771780
        </h1>
        <h3>
            <a href="/">Click to go to Home</a>
        </h3>
    </header>
    <table style="width:100%">
        <tr>
            <th>Name</th>
            <th>Picture</th>
            <th>Caption</th>
        </tr>
        {% for result in results %}
            <tr>
                <td>{{ result['Name'] }}</td>
                <td><img src="{{image_folder}}/{{ result['Picture'] }}" width="100px" alt="No Image"></td>
                <td>{{ result['Caption'] }}</td>
            </tr>
        {% endfor %}
    </table>

    @app.route('/stateall', methods=['POST'])
    def stateall():
        state = request.form['state']
        Todo = Query()
        results = db.search(Todo.State == state)
    return render_template('state.html', results=results, image_folder=PEOPLE_FOLDER)

 8. (Web Page) allow a user to give a Name (first column), and allow a user to change the State and Caption (last column).

    <body>
        <header style="text-align: center;">
            <h1>
            SRUTHI : 1001771780
            </h1>
            <h3>
                <a href="/">Click to go to Home</a>
            </h3>
        </header>
        {% if outputsize > 0 %}
        <h2>{{message}}</h2>
        <h3 style="color: red"> Previous values for {{results1[0]["Name"]}}:</h3>
        <h4> State : {{results1[0]["State"]}}</h4>
        <h4> Caption : {{results1[0]["Caption"]}}</h4>
        <h3 style="color: red"> Updates values for {{results2[0]["Name"]}}:</h3>
        <h4> State : {{results2[0]["State"]}}</h4>
        <h4> Caption : {{results2[0]["Caption"]}}</h4>
        {% else %}
        <h2>Name is not present in the database</h2>
        {% endif %}
    </body>

    @app.route('/updatedata', methods=['POST'])
    def updatedata():
        name = request.form['name']
        state = request.form['state']
        caption = request.form['caption']
        Todo = Query()
        results1 = db.search(Todo.Name == name)
        outputsize = len(results1)
        db.update({"State": state, "Caption" : caption}, Todo.Name.search(name))
        results2 = db.search(Todo.Name == name)
        return render_template('updateddata.html', message="successfully updated your state and caption", outputsize = outputsize, results1=results1, results2=results2)



 9. Show us, in a link, the application running and we will try it out. Only for parts 5, 6, 7, 8

 10. When complete, return (send) this quiz
     If you finish early, send this immediately, otherwise send between
     the end of class and no more than 1 minute after that.

